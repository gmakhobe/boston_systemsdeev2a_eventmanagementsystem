/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.eventmanagementsystem;

import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bbdnet2332
 */
public class AttendeeRegistration extends javax.swing.JFrame {

    /**
     * Creates new form AttendeeRegistration
     */
    
    DefaultTableModel eventSelectionJTable;
    DefaultTableModel attendeeRegistrationJTable;
    int eventId;
    
    public AttendeeRegistration() {
        initComponents();
        
        this.eventId = 0;
        
        eventSelectionJTable = (DefaultTableModel) tableEventSelection.getModel();
        attendeeRegistrationJTable = (DefaultTableModel) tableAttendeeRegistration.getModel();
        
        writeDatabaseInfoToEventSelectionTable(true);
        writeDatabaseInfoToAttendeeRegistrationTable(true);
        TableEventManagerForEvents();
    }
    
    public void TableEventManagerForEvents(){
        tableEventSelection.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                int selectedRow = tableEventSelection.getSelectedRow();

                if (selectedRow != -1) {

                    // Get values from the selected row
                    int columnCount = this.eventSelectionJTable.getColumnCount();
                    Vector rowData = new Vector();
                    for (int i = 0; i < columnCount; i++) {
                        rowData.add(this.eventSelectionJTable.getValueAt(selectedRow, i));
                    }

                    this.eventId = Integer.parseInt((String) rowData.get(0));
                   
                }
            }
        });
    }
    
    public void writeDatabaseInfoToEventSelectionTable(boolean initial){
        Database db = new Database();
        Vector information = db.selectAllDataFromATable("events");
        Vector data = (Vector<Vector>) information.get(0);
        Vector columns = (Vector<String>) information.get(1);
        int tableRows = this.eventSelectionJTable.getRowCount();
        
        for (int i = tableRows - 1; i >= 0; i--){
                this.eventSelectionJTable.removeRow(i);
        }
        
        
        if (initial) {
            for (var columnName : columns){
                this.eventSelectionJTable.addColumn(columnName);
            }
        }
        
        int rowsSize = data.size();
   
        for (int i = 0; i < rowsSize; i++) {
            this.eventSelectionJTable.addRow((Vector<?>) data.get(i));
        }
        
    }
    
    public void writeDatabaseInfoToAttendeeRegistrationTable(boolean initial){
        Database db = new Database();
        Vector information = db.selectAllDataFromATableCustom("SELECT ar.*, e.event_name" +
                                                              " FROM attendee_registration ar" +
                                                              " INNER JOIN events e ON ar.event_id = e.event_id;");
        Vector data = (Vector<Vector>) information.get(0);
        Vector columns = (Vector<String>) information.get(1);
        int tableRows = this.attendeeRegistrationJTable.getRowCount();
        
        for (int i = tableRows - 1; i >= 0; i--){
                this.attendeeRegistrationJTable.removeRow(i);
        }
        
        if (initial) {
            for (var columnName : columns){
                this.attendeeRegistrationJTable.addColumn(columnName);
            }
        }
        
        int rowsSize = data.size();
   
        for (int i = 0; i < rowsSize; i++) {
            this.attendeeRegistrationJTable.addRow((Vector<?>) data.get(i));
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textfieldEmail = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableEventSelection = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        buttonBack = new javax.swing.JButton();
        textfieldAttendeeRegistration = new javax.swing.JTextField();
        textfieldContactNumber = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableAttendeeRegistration = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Attendee Registration");

        jLabel2.setText("Attendee Name:");

        jLabel3.setText("Email");

        tableEventSelection.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tableEventSelection);

        jLabel4.setText("Contact Number");

        jButton1.setText("Sign Up");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        buttonBack.setText("Back");
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });

        textfieldAttendeeRegistration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textfieldAttendeeRegistrationActionPerformed(evt);
            }
        });

        textfieldContactNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textfieldContactNumberActionPerformed(evt);
            }
        });

        jLabel6.setText("Select Event Below by clicking the desired row");

        tableAttendeeRegistration.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tableAttendeeRegistration);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(406, 406, 406))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(133, 133, 133)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(textfieldAttendeeRegistration, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(71, 71, 71)
                                            .addComponent(jLabel3))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(50, 50, 50)
                                            .addComponent(jLabel6)))
                                    .addGap(18, 18, 18)
                                    .addComponent(textfieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(textfieldContactNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 667, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 667, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(129, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(textfieldAttendeeRegistration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textfieldContactNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(jLabel6)
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(buttonBack)
                .addGap(92, 92, 92))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        HomeScreen homeScreen = new HomeScreen();
        homeScreen.show();

        this.hide();
    }//GEN-LAST:event_buttonBackActionPerformed

    private void textfieldAttendeeRegistrationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textfieldAttendeeRegistrationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textfieldAttendeeRegistrationActionPerformed

    private void textfieldContactNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textfieldContactNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textfieldContactNumberActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (this.eventId < 1) {
            JOptionPane.showMessageDialog(null, "Please select event the attendee is signing up for.");
            return ;
        }
        
        String attendeeName = textfieldAttendeeRegistration.getText();
        String attendeeEmail = textfieldEmail.getText();
        String attendeeContact = textfieldContactNumber.getText();
        
        InputValidation inputVal = new InputValidation();
        
        if (inputVal.isFieldEmpty(attendeeName, "Attendee Name") == true) {
            return ;
        }
        if (inputVal.isFieldEmpty(attendeeEmail, "Attendee Email") == true) {
            return ;
        }
        if (inputVal.isFieldEmpty(attendeeContact, "Attendee Contact") == true) {
            return ;
        }
        
        Database db = new Database();
        String sqlStatement = "INSERT INTO attendee_registration (attendee_name, email, contact_number, event_id)" +
                    "VALUES ('"+ attendeeName +"', '"+ attendeeEmail +"', '"+ attendeeContact +"', "+ this.eventId +");";
        if (db.insertDataIntoATable(sqlStatement)){
            JOptionPane.showMessageDialog(null, "Information Captured successfully.");
        }else{
            JOptionPane.showMessageDialog(null, "Information Failed Captured.");
        }
        
        textfieldAttendeeRegistration.setText("");
        textfieldEmail.setText("");
        textfieldContactNumber.setText("");
        writeDatabaseInfoToEventSelectionTable(false);
        writeDatabaseInfoToAttendeeRegistrationTable(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AttendeeRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AttendeeRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AttendeeRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AttendeeRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AttendeeRegistration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBack;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableAttendeeRegistration;
    private javax.swing.JTable tableEventSelection;
    private javax.swing.JTextField textfieldAttendeeRegistration;
    private javax.swing.JTextField textfieldContactNumber;
    private javax.swing.JTextField textfieldEmail;
    // End of variables declaration//GEN-END:variables
}
